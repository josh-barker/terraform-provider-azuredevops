// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/microsoft/azure-devops-go-api/azuredevops/v7/pipelineschecks (interfaces: Client)

// Package azdosdkmocks is a generated GoMock package.
package azdosdkmocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	pipelineschecks "github.com/microsoft/azure-devops-go-api/azuredevops/v7/pipelineschecks"
	"github.com/microsoft/terraform-provider-azuredevops/azuredevops/utils/pipelineschecksextrasv7"
)

// PipelinesChecksClientV7 is a mock of Client interface.
type PipelinesChecksClientV7 struct {
	ctrl     *gomock.Controller
	recorder *PipelinesChecksClientV7MockRecorder
}

// PipelinesChecksClientV7MockRecorder is the mock recorder for PipelinesChecksClientV7.
type PipelinesChecksClientV7MockRecorder struct {
	mock *PipelinesChecksClientV7
}

// NewPipelinesChecksClientV7 creates a new mock instance.
func NewPipelinesChecksClientV7(ctrl *gomock.Controller) *PipelinesChecksClientV7 {
	mock := &PipelinesChecksClientV7{ctrl: ctrl}
	mock.recorder = &PipelinesChecksClientV7MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *PipelinesChecksClientV7) EXPECT() *PipelinesChecksClientV7MockRecorder {
	return m.recorder
}

// AddGenericCheckConfiguration mocks base method.
func (m *PipelinesChecksClientV7) AddGenericCheckConfiguration(arg0 context.Context, arg1 pipelineschecksv7.AddGenericCheckConfigurationArgs) (*pipelineschecks.GenericCheckConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddGenericCheckConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*pipelineschecks.GenericCheckConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddGenericCheckConfiguration indicates an expected call of AddGenericCheckConfiguration.
func (mr *PipelinesChecksClientV7MockRecorder) AddGenericCheckConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddGenericCheckConfiguration", reflect.TypeOf((*PipelinesChecksClientV7)(nil).AddGenericCheckConfiguration), arg0, arg1)
}

// DeleteGenericCheckConfiguration mocks base method.
func (m *PipelinesChecksClientV7) DeleteGenericCheckConfiguration(arg0 context.Context, arg1 pipelineschecksv7.DeleteGenericCheckConfigurationArgs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteGenericCheckConfiguration", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteGenericCheckConfiguration indicates an expected call of DeleteGenericCheckConfiguration.
func (mr *PipelinesChecksClientV7MockRecorder) DeleteGenericCheckConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteGenericCheckConfiguration", reflect.TypeOf((*PipelinesChecksClientV7)(nil).DeleteGenericCheckConfiguration), arg0, arg1)
}

// EvaluateCheckSuite mocks base method.
func (m *PipelinesChecksClientV7) EvaluateCheckSuite(arg0 context.Context, arg1 pipelineschecks.EvaluateCheckSuiteArgs) (*pipelineschecks.CheckSuite, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EvaluateCheckSuite", arg0, arg1)
	ret0, _ := ret[0].(*pipelineschecks.CheckSuite)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EvaluateCheckSuite indicates an expected call of EvaluateCheckSuite.
func (mr *PipelinesChecksClientV7MockRecorder) EvaluateCheckSuite(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EvaluateCheckSuite", reflect.TypeOf((*PipelinesChecksClientV7)(nil).EvaluateCheckSuite), arg0, arg1)
}

// GetGenericCheckConfiguration mocks base method.
func (m *PipelinesChecksClientV7) GetGenericCheckConfiguration(arg0 context.Context, arg1 pipelineschecksv7.GetGenericCheckConfigurationArgs) (*pipelineschecks.GenericCheckConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenericCheckConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*pipelineschecks.GenericCheckConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGenericCheckConfiguration indicates an expected call of GetGenericCheckConfiguration.
func (mr *PipelinesChecksClientV7MockRecorder) GetGenericCheckConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenericCheckConfiguration", reflect.TypeOf((*PipelinesChecksClientV7)(nil).GetGenericCheckConfiguration), arg0, arg1)
}

// GetGenericCheckConfigurationsOnResource mocks base method.
func (m *PipelinesChecksClientV7) GetGenericCheckConfigurationsOnResource(arg0 context.Context, arg1 pipelineschecksv7.GetGenericCheckConfigurationsOnResourceArgs) (*[]pipelineschecks.GenericCheckConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGenericCheckConfigurationsOnResource", arg0, arg1)
	ret0, _ := ret[0].(*[]pipelineschecks.GenericCheckConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGenericCheckConfigurationsOnResource indicates an expected call of GetGenericCheckConfigurationsOnResource.
func (mr *PipelinesChecksClientV7MockRecorder) GetGenericCheckConfigurationsOnResource(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGenericCheckConfigurationsOnResource", reflect.TypeOf((*PipelinesChecksClientV7)(nil).GetGenericCheckConfigurationsOnResource), arg0, arg1)
}

// GetCheckSuite mocks base method.
func (m *PipelinesChecksClientV7) GetCheckSuite(arg0 context.Context, arg1 pipelineschecks.GetCheckSuiteArgs) (*pipelineschecks.CheckSuite, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCheckSuite", arg0, arg1)
	ret0, _ := ret[0].(*pipelineschecks.CheckSuite)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCheckSuite indicates an expected call of GetCheckSuite.
func (mr *PipelinesChecksClientV7MockRecorder) GetCheckSuite(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCheckSuite", reflect.TypeOf((*PipelinesChecksClientV7)(nil).GetCheckSuite), arg0, arg1)
}

// UpdateGenericCheckConfiguration mocks base method.
func (m *PipelinesChecksClientV7) UpdateGenericCheckConfiguration(arg0 context.Context, arg1 pipelineschecksv7.UpdateGenericCheckConfigurationArgs) (*pipelineschecks.GenericCheckConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateGenericCheckConfiguration", arg0, arg1)
	ret0, _ := ret[0].(*pipelineschecks.GenericCheckConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateGenericCheckConfiguration indicates an expected call of UpdateGenericCheckConfiguration.
func (mr *PipelinesChecksClientV7MockRecorder) UpdateGenericCheckConfiguration(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateGenericCheckConfiguration", reflect.TypeOf((*PipelinesChecksClientV7)(nil).UpdateGenericCheckConfiguration), arg0, arg1)
}
